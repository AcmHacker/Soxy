#!/usr/bin/env bash


## SCRIPT VARS, DON'T MODIFY
########################################

SCRIPT_PATH=$(dirname $(readlink -f ${0}))
SOXY_DIR=${HOME}/.soxy
SOXY_CONF=${SOXY_DIR}/config
PID_FILE="/tmp/soxy.pid"


## LOAD TEXT FORMATTER
########################################

source format.sh


## CREAT SOXY DIR IF MISSING
########################################

if [[ ! -d "${SOXY_DIR}" ]]; then
    mkdir -p ${SOXY_DIR}
fi


## LOAD/COPY SOXY CONFIG
########################################

if [[ ! -r "${SOXY_CONF}" ]]; then
    cp "${SCRIPT_PATH}/config.sample" ${SOXY_CONF}
    echo "WARNING: Soxy config not found, default config file created at ${SOXY_CONF}"
    exit 1
fi

source ${SOXY_CONF}


## FUNCTIONS
########################################

function getPid {

    # Get the PID
    PID=$(cat ${PID_FILE})

    # Return the PID
    echo ${PID}

}


function startSocks {

    # Echo status message to console
    printf "Starting SOCKS proxy on port %-6s    " ${LOCAL_PORT}

    if [[ ! -f ${PID_FILE} ]]; then

        # Establish SOCKS connection
        ssh -qfCD ${LOCAL_PORT} ${REMOTE_USER}@${REMOTE_HOST} -p ${REMOTE_PORT} -N & > /dev/null 2>&1

        # Create the PID file
        echo $! > ${PID_FILE}

        # Echo status message to console
        echo "[ $(format OK ${GREEN} ${BOLD}) ]"

    else

        echo "[$(format FAIL ${RED} ${BOLD} ${BLACK})]"
        echo "SOCKS proxy already running, try restarting"

    fi

}


function stopSocks {

    # Echo status message to console
    printf "Stopping SOCKS proxy on port %-6s    " ${LOCAL_PORT}

    if [[ -z "$(getPid)" ]]; then


        # Kill the process
        kill $(getPid) > /dev/null 2>&1

        # Remove the PID file
        if [[ -f ${PID_FILE} ]]; then
            rm -f ${PID_FILE}
        fi

        # Echo status message to console
        echo "[ $(format OK ${GREEN} ${BOLD}) ]"

    else

        echo "[$(format FAIL ${RED} ${BOLD} ${BLACK})]"
        echo "SOCKS proxy already running, try restarting"

    fi

}


## SWITCHES
########################################

case $1 in
    'start')
        startSocks
    ;;
    'stop')
        stopSocks
    ;;
    'restart')
        stopSocks
        startSocks
    ;;
    'status')
        if [ $(getPid) ]; then
            echo "SOCKS proxy running on port ${LOCAL_PORT} -- PID: $(getPid)"
        else
            echo "SOCKS proxy not currently running"
        fi
    ;;
    *)
        echo "Usage: soxy { start | stop | restart | status }"
    ;;
esac
